/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sensor;

import java.awt.Color;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.eclipse.paho.client.mqttv3.MqttException;

/**
 *
 * @author Kelwin
 */
public class Sensor extends javax.swing.JFrame {

    /**
     * Creates new form Environment
     */
    public Sensor() {

        initComponents();
        temp.setText("" + temperature + " °C");
        hum.setText("" + humidity + " %");
        ele.setText("" + electricity + " Kwh");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        sliderTemp = new javax.swing.JSlider();
        temp = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        lightLR1 = new javax.swing.JToggleButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lightLR2 = new javax.swing.JToggleButton();
        lightLR3 = new javax.swing.JToggleButton();
        windowLR1 = new javax.swing.JToggleButton();
        windowLR2 = new javax.swing.JToggleButton();
        jLabel2 = new javax.swing.JLabel();
        txtPeopleLR = new javax.swing.JTextField();
        btnLR = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        windowLR3 = new javax.swing.JToggleButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        LightSR1 = new javax.swing.JToggleButton();
        LightSR2 = new javax.swing.JToggleButton();
        windowSR1 = new javax.swing.JToggleButton();
        jLabel3 = new javax.swing.JLabel();
        txtPeopleSR = new javax.swing.JTextField();
        btnSR = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        lightBR1 = new javax.swing.JToggleButton();
        jLabel14 = new javax.swing.JLabel();
        windowBR1 = new javax.swing.JToggleButton();
        jLabel15 = new javax.swing.JLabel();
        txtPeopleBR = new javax.swing.JTextField();
        btnBR = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        lightKT1 = new javax.swing.JToggleButton();
        lightKT2 = new javax.swing.JToggleButton();
        windowKT1 = new javax.swing.JToggleButton();
        windowKT2 = new javax.swing.JToggleButton();
        jLabel20 = new javax.swing.JLabel();
        txtPeopleKT = new javax.swing.JTextField();
        btnKT = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        hum = new javax.swing.JTextField();
        sliderHum = new javax.swing.JSlider();
        jLabel22 = new javax.swing.JLabel();
        ele = new javax.swing.JTextField();
        sliderEle = new javax.swing.JSlider();
        labelLights = new javax.swing.JLabel();
        labelWindows = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Home Environment ");
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Temperature (°C):");

        sliderTemp.setMajorTickSpacing(2);
        sliderTemp.setMaximum(30);
        sliderTemp.setMinimum(-10);
        sliderTemp.setMinorTickSpacing(1);
        sliderTemp.setPaintLabels(true);
        sliderTemp.setPaintTicks(true);
        sliderTemp.setSnapToTicks(true);
        sliderTemp.setValue(0);
        sliderTemp.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderTempStateChanged(evt);
            }
        });

        temp.setEnabled(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "LivingRoom", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        lightLR1.setText("OFF");
        lightLR1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                lightLR1ItemStateChanged(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Light-1:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Light-2:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Light-3:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Window-1:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Window-2:");

        lightLR2.setText("OFF");
        lightLR2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                lightLR2ItemStateChanged(evt);
            }
        });

        lightLR3.setText("OFF");
        lightLR3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                lightLR3ItemStateChanged(evt);
            }
        });

        windowLR1.setText("CLOSED");
        windowLR1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                windowLR1ItemStateChanged(evt);
            }
        });

        windowLR2.setText("CLOSED");
        windowLR2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                windowLR2ItemStateChanged(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("People-In:");

        txtPeopleLR.setText("0");

        btnLR.setText("Confirm");
        btnLR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLRActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Window-3");

        windowLR3.setText("CLOSED");
        windowLR3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                windowLR3ItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(lightLR1))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(lightLR2))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(lightLR3)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel8)
                                .addComponent(jLabel7))
                            .addComponent(jLabel12))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(windowLR3)
                            .addComponent(windowLR1)
                            .addComponent(windowLR2))
                        .addGap(27, 27, 27))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPeopleLR, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnLR)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lightLR1)
                    .addComponent(jLabel4)
                    .addComponent(jLabel7)
                    .addComponent(windowLR1))
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(lightLR2)
                    .addComponent(jLabel8)
                    .addComponent(windowLR2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(lightLR3)
                    .addComponent(jLabel12)
                    .addComponent(windowLR3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPeopleLR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLR))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "SleepingRoom", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Tahoma", 0, 14))); // NOI18N
        jPanel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Light-1:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Light-2:");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Window-1:");

        LightSR1.setText("OFF");
        LightSR1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                LightSR1ItemStateChanged(evt);
            }
        });

        LightSR2.setText("OFF");
        LightSR2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                LightSR2ItemStateChanged(evt);
            }
        });

        windowSR1.setText("CLOSED");
        windowSR1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                windowSR1ItemStateChanged(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("People-In:");

        txtPeopleSR.setText("0");

        btnSR.setText("Confirm");
        btnSR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSRActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel9))
                        .addGap(24, 24, 24))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(LightSR1)
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(windowSR1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LightSR2)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txtPeopleSR, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnSR)))
                        .addContainerGap(89, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel11)
                    .addComponent(LightSR1)
                    .addComponent(windowSR1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(LightSR2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtPeopleSR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSR))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "BathRoom", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Light-1:");

        lightBR1.setText("OFF");
        lightBR1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                lightBR1ItemStateChanged(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("Window-1:");

        windowBR1.setText("CLOSED");
        windowBR1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                windowBR1ItemStateChanged(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("People-In:");

        txtPeopleBR.setText("0");

        btnBR.setText("Confirm");
        btnBR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBRActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(30, 30, 30)
                        .addComponent(lightBR1))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(windowBR1))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addGap(18, 18, 18)
                        .addComponent(txtPeopleBR, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnBR)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(lightBR1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(windowBR1)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txtPeopleBR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBR))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Kitchen", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setText("Light-1:");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setText("Light-2:");

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setText("Window-1:");

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setText("Window-2:");

        lightKT1.setText("OFF");
        lightKT1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                lightKT1ItemStateChanged(evt);
            }
        });

        lightKT2.setText("OFF");
        lightKT2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                lightKT2ItemStateChanged(evt);
            }
        });

        windowKT1.setText("CLOSED");
        windowKT1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                windowKT1ItemStateChanged(evt);
            }
        });

        windowKT2.setText("CLOSED");
        windowKT2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                windowKT2ItemStateChanged(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel20.setText("People-In:");

        txtPeopleKT.setText("0");

        btnKT.setText("Confirm");
        btnKT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addGap(24, 24, 24)
                                .addComponent(lightKT1))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addGap(24, 24, 24)
                                .addComponent(lightKT2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel18)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(windowKT1))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel19)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(windowKT2))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtPeopleKT, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnKT)))
                .addGap(20, 20, 20))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(lightKT1)
                    .addComponent(jLabel18)
                    .addComponent(windowKT1))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel19)
                        .addComponent(windowKT2))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel17)
                        .addComponent(lightKT2)))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(txtPeopleKT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnKT))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel21.setText("Humidity (%):");

        hum.setEnabled(false);

        sliderHum.setMajorTickSpacing(5);
        sliderHum.setMinorTickSpacing(5);
        sliderHum.setPaintLabels(true);
        sliderHum.setPaintTicks(true);
        sliderHum.setSnapToTicks(true);
        sliderHum.setToolTipText("");
        sliderHum.setValue(5);
        sliderHum.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderHumStateChanged(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel22.setText("Electricity (Kwh):");

        ele.setEnabled(false);

        sliderEle.setMajorTickSpacing(100);
        sliderEle.setMaximum(1000);
        sliderEle.setMinorTickSpacing(50);
        sliderEle.setPaintLabels(true);
        sliderEle.setPaintTicks(true);
        sliderEle.setSnapToTicks(true);
        sliderEle.setValue(0);
        sliderEle.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderEleStateChanged(evt);
            }
        });

        labelLights.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelLights.setText("Lights On: 0/8");

        labelWindows.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelWindows.setText("Windows Open: 0/7");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelLights)
                            .addComponent(labelWindows)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel22)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ele, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(temp, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(sliderTemp, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(sliderHum, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(sliderEle, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel21)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(hum, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(temp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sliderTemp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21))
                .addGap(6, 6, 6)
                .addComponent(sliderHum, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(ele, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addComponent(sliderEle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(labelLights)
                        .addGap(18, 18, 18)
                        .addComponent(labelWindows)
                        .addGap(95, 95, 95))))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void sliderTempStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderTempStateChanged

        temperature = sliderTemp.getValue();
        temp.setText("" + temperature + " °C");

        publishData();
    }//GEN-LAST:event_sliderTempStateChanged

    private void lightLR1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_lightLR1ItemStateChanged
        // TODO add your handling code here:
        if (lightLR1.isSelected()) {
            LivingRoom_Lights_l1 = "ON";
            lightLR1.setText("ON");
            lightLR1.setBackground(Color.YELLOW);
            Lights_LivingRoom++;
        } else {
            LivingRoom_Lights_l1 = "OFF";
            lightLR1.setText("OFF");
            lightLR1.setBackground(Color.GRAY);
            Lights_LivingRoom--;
        }
        //System.out.println(Lights_LivingRoom);
        LightsOn = Lights_LivingRoom + Lights_Kitchen + Lights_SleepingRoom + Lights_Bathroom;
        labelLights.setText("Light On: " + LightsOn + "/8");
        publishData();
    }//GEN-LAST:event_lightLR1ItemStateChanged

    private void lightLR2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_lightLR2ItemStateChanged
        // TODO add your handling code here:
        if (lightLR2.isSelected()) {
            LivingRoom_Lights_l2 = "ON";
            lightLR2.setText("ON");
            lightLR2.setBackground(Color.YELLOW);
            Lights_LivingRoom++;
        } else {
            LivingRoom_Lights_l2 = "OFF";
            lightLR2.setText("OFF");
            lightLR2.setBackground(Color.GRAY);
            Lights_LivingRoom--;
        }
        //System.out.println(Lights_LivingRoom);
        LightsOn = Lights_LivingRoom + Lights_Kitchen + Lights_SleepingRoom + Lights_Bathroom;
        labelLights.setText("Light On: " + LightsOn + "/8");
        publishData();
    }//GEN-LAST:event_lightLR2ItemStateChanged

    private void lightLR3ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_lightLR3ItemStateChanged
        // TODO add your handling code here:

        if (lightLR3.isSelected()) {
            LivingRoom_Lights_l3 = "ON";
            lightLR3.setText("ON");
            lightLR3.setBackground(Color.YELLOW);
            Lights_LivingRoom++;
        } else {
            LivingRoom_Lights_l3 = "OFF";
            lightLR3.setText("OFF");
            lightLR3.setBackground(Color.GRAY);
            Lights_LivingRoom--;
        }
        //System.out.println(Lights_LivingRoom);
        LightsOn = Lights_LivingRoom + Lights_Kitchen + Lights_SleepingRoom + Lights_Bathroom;
        labelLights.setText("Light On: " + LightsOn + "/8");
        publishData();
    }//GEN-LAST:event_lightLR3ItemStateChanged

    private void windowLR1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_windowLR1ItemStateChanged
        // TODO add your handling code here:
        if (windowLR1.isSelected()) {
            LivingRoom_Windows_l1 = "ON";
            windowLR1.setText("OPEN");
            windowLR1.setBackground(Color.GREEN);
            Windows_LivingRoom++;
        } else {
            LivingRoom_Windows_l1 = "OFF";
            windowLR1.setText("CLOSED");
            windowLR1.setBackground(Color.GRAY);
            Windows_LivingRoom--;
        }
        //System.out.println(Windows_LivingRoom);
        Windows_Number = Windows_LivingRoom + Windows_Kitchen + Windows_SleepingRoom + Windows_Bathroom;
        labelWindows.setText("Windows Open: " + Windows_Number + "/7");
        publishData();
    }//GEN-LAST:event_windowLR1ItemStateChanged

    private void windowLR2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_windowLR2ItemStateChanged
        // TODO add your handling code here:
        if (windowLR2.isSelected()) {
            LivingRoom_Windows_l2 = "ON";
            windowLR2.setText("OPEN");
            windowLR2.setBackground(Color.GREEN);
            Windows_LivingRoom++;
        } else {
            LivingRoom_Windows_l2 = "OFF";
            windowLR2.setText("CLOSED");
            windowLR2.setBackground(Color.GRAY);
            Windows_LivingRoom--;
        }
        //System.out.println(Windows_LivingRoom);
        Windows_Number = Windows_LivingRoom + Windows_Kitchen + Windows_SleepingRoom + Windows_Bathroom;
        labelWindows.setText("Windows Open: " + Windows_Number + "/7");
        publishData();
    }//GEN-LAST:event_windowLR2ItemStateChanged

    private void LightSR1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_LightSR1ItemStateChanged
        if (LightSR1.isSelected()) {
            SleepingRoom_Lights_l1 = "ON";
            LightSR1.setText("ON");
            LightSR1.setBackground(Color.YELLOW);
            Lights_SleepingRoom++;
        } else {
            SleepingRoom_Lights_l1 = "OFF";
            LightSR1.setText("OFF");
            LightSR1.setBackground(Color.GRAY);
            Lights_SleepingRoom--;
        }
        //System.out.println(Lights_SleepingRoom);
        LightsOn = Lights_LivingRoom + Lights_Kitchen + Lights_SleepingRoom + Lights_Bathroom;
        labelLights.setText("Light On: " + LightsOn + "/8");
        publishData();
    }//GEN-LAST:event_LightSR1ItemStateChanged

    private void LightSR2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_LightSR2ItemStateChanged
        if (LightSR2.isSelected()) {
            SleepingRoom_Lights_l2 = "ON";
            LightSR2.setText("ON");
            LightSR2.setBackground(Color.YELLOW);
            Lights_SleepingRoom++;
        } else {
            SleepingRoom_Lights_l2 = "ON";
            LightSR2.setText("OFF");
            LightSR2.setBackground(Color.GRAY);
            Lights_SleepingRoom--;
        }
        //System.out.println(Lights_SleepingRoom);
        LightsOn = Lights_LivingRoom + Lights_Kitchen + Lights_SleepingRoom + Lights_Bathroom;
        labelLights.setText("Light On: " + LightsOn + "/8");
        publishData();
    }//GEN-LAST:event_LightSR2ItemStateChanged

    private void windowSR1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_windowSR1ItemStateChanged
        if (windowSR1.isSelected()) {
            SleepingRoom_Windows_l1 = "ON";
            windowSR1.setText("OPEN");
            windowSR1.setBackground(Color.GREEN);
            Windows_SleepingRoom++;
        } else {
            SleepingRoom_Windows_l1 = "OFF";
            windowSR1.setText("CLOSED");
            windowSR1.setBackground(Color.GRAY);
            Windows_SleepingRoom--;
        }
        //System.out.println(Windows_SleepingRoom);
        Windows_Number = Windows_LivingRoom + Windows_Kitchen + Windows_SleepingRoom + Windows_Bathroom;
        labelWindows.setText("Windows Open: " + Windows_Number + "/7");
        publishData();
    }//GEN-LAST:event_windowSR1ItemStateChanged

    private void lightBR1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_lightBR1ItemStateChanged
        if (lightBR1.isSelected()) {
            Bathroom_Lights_l1 = "ON";
            lightBR1.setText("ON");
            lightBR1.setBackground(Color.YELLOW);
            Lights_Bathroom++;
        } else {
            Bathroom_Lights_l1 = "OFF";
            lightBR1.setText("OFF");
            lightBR1.setBackground(Color.GRAY);
            Lights_Bathroom--;
        }
        //System.out.println(Lights_Bathroom);
        LightsOn = Lights_LivingRoom + Lights_Kitchen + Lights_SleepingRoom + Lights_Bathroom;
        labelLights.setText("Light On: " + LightsOn + "/8");
        publishData();
    }//GEN-LAST:event_lightBR1ItemStateChanged

    private void windowBR1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_windowBR1ItemStateChanged
        if (windowBR1.isSelected()) {
            Bathroom_Windows_l1 = "ON";
            windowBR1.setText("OPEN");
            windowBR1.setBackground(Color.GREEN);
            Windows_Bathroom++;
        } else {
            Bathroom_Windows_l1 = "OFF";
            windowBR1.setText("CLOSED");
            windowBR1.setBackground(Color.GRAY);
            Windows_Bathroom--;
        }
        //System.out.println(Windows_Bathroom);
        Windows_Number = Windows_LivingRoom + Windows_Kitchen + Windows_SleepingRoom + Windows_Bathroom;
        labelWindows.setText("Windows Open: " + Windows_Number + "/7");
        publishData();
    }//GEN-LAST:event_windowBR1ItemStateChanged

    private void lightKT1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_lightKT1ItemStateChanged
        if (lightKT1.isSelected()) {
            Kitchen_Lights_l1 = "ON";
            lightKT1.setText("ON");
            lightKT1.setBackground(Color.YELLOW);
            Lights_Kitchen++;
        } else {
            Kitchen_Lights_l1 = "OFF";
            lightKT1.setText("OFF");
            lightKT1.setBackground(Color.GRAY);
            Lights_Kitchen--;
        }
        //System.out.println(Lights_Kitchen);
        LightsOn = Lights_LivingRoom + Lights_Kitchen + Lights_SleepingRoom + Lights_Bathroom;
        labelLights.setText("Light On: " + LightsOn + "/8");
        publishData();
    }//GEN-LAST:event_lightKT1ItemStateChanged

    private void lightKT2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_lightKT2ItemStateChanged
        if (lightKT2.isSelected()) {
            Kitchen_Lights_l2 = "ON";
            lightKT2.setText("ON");
            lightKT2.setBackground(Color.YELLOW);
            Lights_Kitchen++;
        } else {
            Kitchen_Lights_l2 = "OFF";
            lightKT2.setText("OFF");
            lightKT2.setBackground(Color.GRAY);
            Lights_Kitchen--;
        }
        //System.out.println(Lights_Kitchen);
        LightsOn = Lights_LivingRoom + Lights_Kitchen + Lights_SleepingRoom + Lights_Bathroom;
        labelLights.setText("Light On: " + LightsOn + "/8");
        publishData();
    }//GEN-LAST:event_lightKT2ItemStateChanged

    private void windowKT1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_windowKT1ItemStateChanged
        if (windowKT1.isSelected()) {
            Kitchen_Windows_l1 = "ON";
            windowKT1.setText("OPEN");
            windowKT1.setBackground(Color.GREEN);
            Windows_Kitchen++;
        } else {
            Kitchen_Windows_l1 = "OFF";
            windowKT1.setText("CLOSED");
            windowKT1.setBackground(Color.GRAY);
            Windows_Kitchen--;
        }
        //System.out.println(Windows_Kitchen);
        Windows_Number = Windows_LivingRoom + Windows_Kitchen + Windows_SleepingRoom + Windows_Bathroom;
        labelWindows.setText("Windows Open: " + Windows_Number + "/7");
    }//GEN-LAST:event_windowKT1ItemStateChanged

    private void windowKT2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_windowKT2ItemStateChanged
        if (windowKT2.isSelected()) {
            Kitchen_Windows_l2 = "ON";
            windowKT2.setText("OPEN");
            windowKT2.setBackground(Color.GREEN);
            Windows_Kitchen++;
        } else {
            Kitchen_Windows_l2 = "OFF";
            windowKT2.setText("CLOSED");
            windowKT2.setBackground(Color.GRAY);
            Windows_Kitchen--;
        }
        //System.out.println(Windows_Kitchen);
        Windows_Number = Windows_LivingRoom + Windows_Kitchen + Windows_SleepingRoom + Windows_Bathroom;
        labelWindows.setText("Windows Open: " + Windows_Number + "/7");
        publishData();
    }//GEN-LAST:event_windowKT2ItemStateChanged

    private void btnLRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLRActionPerformed
        LivingRoom_People = Integer.parseInt(txtPeopleLR.getText());
        //System.out.println(LivingRoom_People);
        publishData();

    }//GEN-LAST:event_btnLRActionPerformed

    private void btnSRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSRActionPerformed
        SleepingRoom_People = Integer.parseInt(txtPeopleSR.getText());
        //System.out.println(SleepingRoom_People);
        publishData();
    }//GEN-LAST:event_btnSRActionPerformed

    private void btnBRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBRActionPerformed
        Bathroom_People = Integer.parseInt(txtPeopleBR.getText());
        //System.out.println(Bathroom_People);
        publishData();
    }//GEN-LAST:event_btnBRActionPerformed

    private void btnKTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKTActionPerformed
        Kitchen_People = Integer.parseInt(txtPeopleKT.getText());
        //System.out.println(Kitchen_People);
        publishData();
    }//GEN-LAST:event_btnKTActionPerformed

    private void windowLR3ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_windowLR3ItemStateChanged
        if (windowLR3.isSelected()) {
            LivingRoom_Windows_l3 = "ON";
            windowLR3.setText("OPEN");
            windowLR3.setBackground(Color.GREEN);
            Windows_LivingRoom++;
        } else {
            LivingRoom_Windows_l3 = "OFF";
            windowLR3.setText("CLOSED");
            windowLR3.setBackground(Color.GRAY);
            Windows_LivingRoom--;
        }
        //System.out.println(Windows_LivingRoom);
        Windows_Number = Windows_LivingRoom + Windows_Kitchen + Windows_SleepingRoom + Windows_Bathroom;
        labelWindows.setText("Windows Open: " + Windows_Number + "/7");
        publishData();
    }//GEN-LAST:event_windowLR3ItemStateChanged

    private void sliderHumStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderHumStateChanged
        humidity = sliderHum.getValue();
        hum.setText("" + humidity + " %");
        publishData();
    }//GEN-LAST:event_sliderHumStateChanged

    private void sliderEleStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderEleStateChanged
        electricity = sliderEle.getValue();
        ele.setText("" + electricity + " Kwh");
        publishData();

    }//GEN-LAST:event_sliderEleStateChanged

    public static void main(String args[]) throws MqttException, InterruptedException, IOException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sensor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        final Sensor k = new Sensor();
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                k.setVisible(true);
            }
        });
        k.publishData();
        Thread.sleep(1000);
        for (;;) {
            Thread.sleep(4000);
            k.Actuator();
        }

    }

    public void publishData() {
        Paho p = null;
        try {
            p = new Paho();
        } catch (MqttException ex) {
            Logger.getLogger(Sensor.class.getName()).log(Level.SEVERE, null, ex);
        }

        System.out.println("Seding with MQTT each 10 seconds..");

        //Send updates
        p.send("home/general/electricity", sliderEle.getValue() + "");
        p.send("home/general/humidity", sliderHum.getValue() + "");
        p.send("home/general/temperature", sliderTemp.getValue() + "");

        p.send("home/general/lights", LightsOn + "");
        p.send("home/livingroom/lights", Lights_LivingRoom + "");
        p.send("home/kitchen/lights", Lights_Kitchen + "");
        p.send("home/sleepingroom/lights", Lights_SleepingRoom + "");
        p.send("home/bathroom/lights", Lights_Bathroom + "");
        p.send("home/livingroom/lights/1", LivingRoom_Lights_l1 + "");
        p.send("home/livingroom/lights/2", LivingRoom_Lights_l2 + "");
        p.send("home/livingroom/lights/3", LivingRoom_Lights_l3 + "");
        p.send("home/kitchen/lights/1", Kitchen_Lights_l1 + "");
        p.send("home/kitchen/lights/2", Kitchen_Lights_l2 + "");
        p.send("home/sleepingroom/lights/1", SleepingRoom_Lights_l1 + "");
        p.send("home/sleepingroom/lights/2", SleepingRoom_Lights_l2 + "");
        p.send("home/bathroom/lights/1", Bathroom_Lights_l1 + "");

        p.send("home/general/windows", Windows_Number + "");
        p.send("home/livingroom/windows", Windows_LivingRoom + "");
        p.send("home/kitchen/windows", Windows_Kitchen + "");
        p.send("home/sleepingroom/windows", Windows_SleepingRoom + "");
        p.send("home/bathroom/windows", Windows_Bathroom + "");
        p.send("home/livingroom/windows/1", LivingRoom_Windows_l1 + "");
        p.send("home/livingroom/windows/2", LivingRoom_Windows_l2 + "");
        p.send("home/livingroom/windows/3", LivingRoom_Windows_l3 + "");
        p.send("home/kitchen/windows/1", Kitchen_Windows_l1 + "");
        p.send("home/kitchen/windows/2", Kitchen_Windows_l2 + "");
        p.send("home/sleepingroom/windows/1", SleepingRoom_Windows_l1 + "");
        p.send("home/bathroom/windows/1", Bathroom_Windows_l1 + "");

        p.send("home/livingroom/people", LivingRoom_People + "");
        p.send("home/kitchen/people", Kitchen_People + "");
        p.send("home/sleepingroom/people", SleepingRoom_People + "");
        p.send("home/bathroom/people", Bathroom_People + "");

    }

    private void Actuator() throws MqttException, InterruptedException {

        try {
            String file = readFile();

            //System.out.println(file);
            String[] parts = file.split(": ");

            switch (parts[0]) {
                case "increase temperature":
                    int tempe = (int) Float.parseFloat(parts[1]);
                    sliderTemp.setValue(tempe);
                    temp.setText("" + tempe + " °C");
                    break;
                case "decrease temperature":
                    int tempera = (int) Float.parseFloat(parts[1]);
                    sliderTemp.setValue(tempera);
                    temp.setText("" + tempera + " °C");
                break;
                case "open light":
                    switch (parts[1].trim()) {
                        case "LivingRoom_Lights_l1":

                            if (!lightLR1.isSelected()) {
                                lightLR1.setSelected(true);
                                LivingRoom_Lights_l1 = "ON";
                                publishData();
                            }
                            break;
                        case "LivingRoom_Lights_l2":
                            if (!lightLR2.isSelected()) {
                                lightLR2.setSelected(true);
                            }
                            break;

                        case "LivingRoom_Lights_l3":
                            if (!lightLR2.isSelected()) {
                                lightLR3.setSelected(true);
                            }
                            break;
                        case "Kitchen_Lights_l1":
                            if (!lightKT1.isSelected()) {
                                lightKT1.setSelected(true);
                            }
                            break;
                        case "Kitchen_Lights_l2":
                            if (!lightKT2.isSelected()) {
                                lightKT2.setSelected(true);
                            }
                            break;
                        case "SleepingRoom_Lights_l1":
                            if (!LightSR1.isSelected()) {
                                LightSR1.setSelected(true);
                            }
                            break;
                        case "SleepingRoom_Lights_l2":
                            if (!LightSR1.isSelected()) {
                                LightSR1.setSelected(true);
                            }
                            break;
                        case "BathRoom_Lights_l1":
                            if (!lightBR1.isSelected()) {
                                lightBR1.setSelected(true);
                            }
                            break;

                    }
                    break;
                case "open window":
                    switch (parts[1].trim()) {
                        case "LivingRoom_Windows_l1":
                            if (!windowLR1.isSelected()) {
                                windowLR1.setSelected(true);
                            }
                            break;
                        case "LivingRoom_Windows_l2":
                            if (!windowLR2.isSelected()) {
                                windowLR2.setSelected(true);
                            }
                            break;
                        case "Kitchen_Windows_l1":
                            if (!windowKT1.isSelected()) {
                                windowKT1.setSelected(true);
                            }
                            break;
                        case "Kitchen_Windows_l2":
                            if (!windowKT2.isSelected()) {
                                windowKT2.setSelected(true);
                            }
                            break;
                        case "SleepingRoom_Windows_l1":
                            if (!windowSR1.isSelected()) {
                                windowLR3.setSelected(true);
                            }
                            break;
                        case "BathRoom_Windows_l1":
                            if (!windowBR1.isSelected()) {
                                windowBR1.setSelected(true);
                            }
                            break;
                    }
                    break;

                case "close window":
                    switch (parts[1].trim()) {
                        case "LivingRoom_Windows_l1":
                            if (windowLR1.isSelected()) {
                                windowLR1.setSelected(false);
                            }
                            break;
                        case "LivingRoom_Windows_l2":
                            if (windowLR2.isSelected()) {
                                windowLR2.setSelected(false);
                            }
                            break;

                        case "LivingRoom_Windows_l3":
                            if (windowLR3.isSelected()) {
                                windowLR3.setSelected(false);
                            }
                            break;

                        case "Kitchen_Windows_l1":
                            if (windowKT1.isSelected()) {
                                windowKT1.setSelected(false);
                            }
                            break;

                        case "Kitchen_Windows_l2":
                            if (windowKT2.isSelected()) {
                                windowKT2.setSelected(false);
                            }
                            break;

                        case "SleepingRoom_Windows_l1":
                            if (windowSR1.isSelected()) {
                                windowLR3.setSelected(false);
                            }
                            break;

                        case "BathRoom_Windows_l1":
                            if (windowBR1.isSelected()) {
                                windowBR1.setSelected(false);
                            }
                            break;

                    }
                    break;

                case "close light":
                    switch (parts[1].trim()) {
                        case "LivingRoom_Lights_l1":

                            if (lightLR1.isSelected()) {
                                lightLR1.setSelected(false);
                            }
                            break;
                        case "LivingRoom_Lights_l2":
                            if (lightLR2.isSelected()) {
                                lightLR2.setSelected(false);
                            }
                            break;

                        case "LivingRoom_Lights_l3":
                            if (lightLR2.isSelected()) {
                                lightLR3.setSelected(false);
                            }
                            break;

                        case "Kitchen_Lights_l1":
                            if (lightKT1.isSelected()) {
                                lightKT1.setSelected(false);
                            }
                            break;
                        case "Kitchen_Lights_l2":
                            if (lightKT2.isSelected()) {
                                lightKT2.setSelected(false);
                            }
                            break;
                        case "SleepingRoom_Lights_l1":
                            if (LightSR1.isSelected()) {
                                LightSR1.setSelected(false);
                            }
                            break;
                        case "SleepingRoom_Lights_l2":
                            if (LightSR1.isSelected()) {
                                LightSR1.setSelected(false);
                            }
                            break;
                        case "BathRoom_Lights_l1":
                            if (lightBR1.isSelected()) {
                                lightBR1.setSelected(false);
                            }
                            break;

                    }
                    break;
                case "close lights":
                    switch (parts[1].trim()) {
                        case "sleepingroom":
                            if (LightSR1.isSelected()) {
                                LightSR1.setSelected(false);
                            }
                            if (LightSR2.isSelected()) {
                                LightSR2.setSelected(false);
                            }
                            break;
                        case "bathroom":
                            if (lightBR1.isSelected()) {
                                lightBR1.setSelected(false);
                            }
                            break;
                        case "kitchen":
                            if (lightKT1.isSelected()) {
                                lightKT1.setSelected(false);
                            }
                            if (lightKT2.isSelected()) {
                                lightKT2.setSelected(false);
                            }
                            break;
                        case "livingroom":
                            if (lightLR1.isSelected()) {
                                lightLR1.setSelected(false);
                            }
                            if (lightLR2.isSelected()) {
                                lightLR2.setSelected(false);
                            }
                            if (lightLR2.isSelected()) {
                                lightLR2.setSelected(false);
                            }
                            break;
                    }
                    break;
                case "windows":
                    switch (parts[1].trim()) {
                        case "0":
                            //close
                            if (windowLR1.isSelected()) {
                                windowLR1.setSelected(false);
                            }
                            if (windowLR2.isSelected()) {
                                windowLR2.setSelected(false);
                            }
                            if (windowLR3.isSelected()) {
                                windowLR3.setSelected(false);
                            }
                            if (windowKT1.isSelected()) {
                                windowKT1.setSelected(false);
                            }
                            if (windowKT2.isSelected()) {
                                windowKT2.setSelected(false);
                            }
                            if (windowSR1.isSelected()) {
                                windowLR3.setSelected(false);
                            }
                            if (windowBR1.isSelected()) {
                                windowBR1.setSelected(false);
                            }
                            break;
                        case "1":
                            //open

                            if (!windowLR1.isSelected()) {
                                windowLR1.setSelected(true);
                            }
                            if (!windowLR2.isSelected()) {
                                windowLR2.setSelected(true);
                            }
                            if (!windowKT1.isSelected()) {
                                windowKT1.setSelected(true);
                            }
                            if (!windowKT2.isSelected()) {
                                windowKT2.setSelected(true);
                            }
                            if (!windowSR1.isSelected()) {
                                windowLR3.setSelected(true);
                            }
                            if (!windowBR1.isSelected()) {
                                windowBR1.setSelected(true);
                            }

                            break;
                    }
                    break;
                default:
                    System.out.println("niente2");
                    break;

            }
            publishData();
        } catch (IOException ex) {
            Logger.getLogger(Sensor.class.getName()).log(Level.SEVERE, null, ex);
        }
        //Thread.sleep(2000);
        System.out.println("\n");

    }

    public String readFile() throws FileNotFoundException, IOException {
        BufferedReader br = new BufferedReader(new FileReader(System.getProperty("user.home") + "/Documents/Ruscio/OpenHAB/OpenHAB/execute.txt"));
        try {
            StringBuilder sb = new StringBuilder();
            String line = br.readLine();

            while (line != null) {
                sb.append(line);
                sb.append(System.lineSeparator());
                line = br.readLine();
            }
            String everything = sb.toString();
            System.out.println(everything);
            return everything;
        } finally {
            br.close();
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton LightSR1;
    private javax.swing.JToggleButton LightSR2;
    private javax.swing.JButton btnBR;
    private javax.swing.JButton btnKT;
    private javax.swing.JButton btnLR;
    private javax.swing.JButton btnSR;
    private javax.swing.JTextField ele;
    private javax.swing.JTextField hum;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel labelLights;
    private javax.swing.JLabel labelWindows;
    private javax.swing.JToggleButton lightBR1;
    private javax.swing.JToggleButton lightKT1;
    private javax.swing.JToggleButton lightKT2;
    private javax.swing.JToggleButton lightLR1;
    private javax.swing.JToggleButton lightLR2;
    private javax.swing.JToggleButton lightLR3;
    private javax.swing.JSlider sliderEle;
    private javax.swing.JSlider sliderHum;
    private javax.swing.JSlider sliderTemp;
    private javax.swing.JTextField temp;
    private javax.swing.JTextField txtPeopleBR;
    private javax.swing.JTextField txtPeopleKT;
    private javax.swing.JTextField txtPeopleLR;
    private javax.swing.JTextField txtPeopleSR;
    private javax.swing.JToggleButton windowBR1;
    private javax.swing.JToggleButton windowKT1;
    private javax.swing.JToggleButton windowKT2;
    private javax.swing.JToggleButton windowLR1;
    private javax.swing.JToggleButton windowLR2;
    private javax.swing.JToggleButton windowLR3;
    private javax.swing.JToggleButton windowSR1;
    // End of variables declaration//GEN-END:variables

    int temperature = 0;
    int humidity = 5;
    int electricity = 0;

    int LightsOn = 0, Lights_LivingRoom = 0, Lights_Kitchen = 0, Lights_SleepingRoom = 0, Lights_Bathroom = 0;
    String LivingRoom_Lights_l1 = "OFF", LivingRoom_Lights_l2 = "OFF", LivingRoom_Lights_l3 = "OFF", Kitchen_Lights_l1 = "OFF";
    String Kitchen_Lights_l2 = "OFF", SleepingRoom_Lights_l1 = "OFF", SleepingRoom_Lights_l2 = "OFF", Bathroom_Lights_l1 = "OFF";
    int Windows_Number = 0, Windows_LivingRoom = 0, Windows_Kitchen = 0, Windows_SleepingRoom = 0, Windows_Bathroom = 0;
    int LivingRoom_People = 0, Kitchen_People = 0, SleepingRoom_People = 0, Bathroom_People = 0;
    String LivingRoom_Windows_l1 = "OFF", LivingRoom_Windows_l2 = "OFF", LivingRoom_Windows_l3 = "OFF", Kitchen_Windows_l1 = "OFF", Kitchen_Windows_l2 = "OFF";
    String SleepingRoom_Windows_l1 = "OFF", Bathroom_Windows_l1 = "OFF";

}
